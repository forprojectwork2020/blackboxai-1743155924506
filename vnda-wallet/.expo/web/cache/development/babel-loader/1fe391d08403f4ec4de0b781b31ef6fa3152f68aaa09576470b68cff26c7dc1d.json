{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, TextInput, Card } from 'react-native-paper';\nimport { useWallet } from \"../context/WalletContext\";\nimport { COLORS, SIZES } from \"../constants\";\nimport Header from \"../components/Header\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SendScreen = function SendScreen(_ref) {\n  var _route$params;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useWallet = useWallet(),\n    wallet = _useWallet.wallet,\n    sendTransaction = _useWallet.sendTransaction;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    recipient = _useState2[0],\n    setRecipient = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    amount = _useState4[0],\n    setAmount = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var selectedToken = ((_route$params = route.params) == null ? void 0 : _route$params.token) || {\n    symbol: 'TRX',\n    balance: '0',\n    contractAddress: null\n  };\n  var validateAddress = function validateAddress(address) {\n    if (!address) return false;\n    return address.startsWith('T') && address.length === 34;\n  };\n  var validateAmount = function validateAmount(value) {\n    if (!value) return false;\n    var numValue = parseFloat(value);\n    return !isNaN(numValue) && numValue > 0 && numValue <= parseFloat(selectedToken.balance);\n  };\n  var handleSend = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!validateAddress(recipient)) {\n        setError('Invalid recipient address');\n        return;\n      }\n      if (!validateAmount(amount)) {\n        setError('Invalid amount');\n        return;\n      }\n      try {\n        setLoading(true);\n        setError('');\n        yield sendTransaction(recipient, parseFloat(amount), selectedToken.contractAddress);\n        navigation.navigate('Transactions');\n      } catch (err) {\n        setError('Failed to send transaction');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSend() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Header, {\n      title: \"Send\",\n      showBack: true\n    }), _jsxs(ScrollView, {\n      style: styles.content,\n      children: [_jsx(Card, {\n        style: styles.balanceCard,\n        children: _jsxs(Card.Content, {\n          children: [_jsx(Text, {\n            style: styles.balanceLabel,\n            children: \"Available Balance\"\n          }), _jsxs(Text, {\n            style: styles.balanceValue,\n            children: [selectedToken.balance, \" \", selectedToken.symbol]\n          })]\n        })\n      }), _jsxs(View, {\n        style: styles.form,\n        children: [_jsx(TextInput, {\n          mode: \"outlined\",\n          label: \"Recipient Address\",\n          value: recipient,\n          onChangeText: setRecipient,\n          style: styles.input,\n          autoCapitalize: \"none\"\n        }), _jsx(TextInput, {\n          mode: \"outlined\",\n          label: \"Amount\",\n          value: amount,\n          onChangeText: setAmount,\n          keyboardType: \"decimal-pad\",\n          style: styles.input,\n          right: _jsx(TextInput.Affix, {\n            text: selectedToken.symbol\n          })\n        }), error ? _jsx(Text, {\n          style: styles.error,\n          children: error\n        }) : null, _jsxs(Button, {\n          mode: \"contained\",\n          onPress: handleSend,\n          loading: loading,\n          disabled: !recipient || !amount || loading,\n          style: styles.button,\n          children: [\"Send \", selectedToken.symbol]\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.background\n  },\n  content: {\n    flex: 1\n  },\n  balanceCard: {\n    margin: SIZES.md\n  },\n  balanceLabel: {\n    fontSize: 14,\n    color: COLORS.textSecondary,\n    marginBottom: SIZES.xs\n  },\n  balanceValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: COLORS.text\n  },\n  form: {\n    padding: SIZES.md\n  },\n  input: {\n    marginBottom: SIZES.md\n  },\n  button: {\n    marginTop: SIZES.md\n  },\n  error: {\n    color: COLORS.error,\n    marginBottom: SIZES.md\n  }\n});\nexport default SendScreen;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","ScrollView","Button","TextInput","Card","useWallet","COLORS","SIZES","Header","jsx","_jsx","jsxs","_jsxs","SendScreen","_ref","_route$params","navigation","route","_useWallet","wallet","sendTransaction","_useState","_useState2","_slicedToArray","recipient","setRecipient","_useState3","_useState4","amount","setAmount","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","selectedToken","params","token","symbol","balance","contractAddress","validateAddress","address","startsWith","length","validateAmount","value","numValue","parseFloat","isNaN","handleSend","_ref2","_asyncToGenerator","navigate","err","console","apply","arguments","style","styles","container","children","title","showBack","content","balanceCard","Content","balanceLabel","balanceValue","form","mode","label","onChangeText","input","autoCapitalize","keyboardType","right","Affix","text","onPress","disabled","button","create","flex","backgroundColor","background","margin","md","fontSize","color","textSecondary","marginBottom","xs","fontWeight","padding","marginTop"],"sources":["/project/sandbox/user-workspace/vnda-wallet/src/screens/SendScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\nimport { Button, TextInput, Card } from 'react-native-paper';\nimport { useWallet } from '../context/WalletContext';\nimport { COLORS, SIZES } from '../constants';\nimport Header from '../components/Header';\n\nconst SendScreen = ({ navigation, route }) => {\n  const { wallet, sendTransaction } = useWallet();\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const selectedToken = route.params?.token || { symbol: 'TRX', balance: '0', contractAddress: null };\n\n  const validateAddress = (address) => {\n    if (!address) return false;\n    // TRX addresses start with T and are 34 characters long\n    return address.startsWith('T') && address.length === 34;\n  };\n\n  const validateAmount = (value) => {\n    if (!value) return false;\n    const numValue = parseFloat(value);\n    return !isNaN(numValue) && numValue > 0 && numValue <= parseFloat(selectedToken.balance);\n  };\n\n  const handleSend = async () => {\n    if (!validateAddress(recipient)) {\n      setError('Invalid recipient address');\n      return;\n    }\n\n    if (!validateAmount(amount)) {\n      setError('Invalid amount');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      \n      await sendTransaction(\n        recipient,\n        parseFloat(amount),\n        selectedToken.contractAddress // null for TRX, contract address for tokens\n      );\n      \n      navigation.navigate('Transactions');\n    } catch (err) {\n      setError('Failed to send transaction');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Header title=\"Send\" showBack />\n      \n      <ScrollView style={styles.content}>\n        <Card style={styles.balanceCard}>\n          <Card.Content>\n            <Text style={styles.balanceLabel}>Available Balance</Text>\n            <Text style={styles.balanceValue}>\n              {selectedToken.balance} {selectedToken.symbol}\n            </Text>\n          </Card.Content>\n        </Card>\n\n        <View style={styles.form}>\n          <TextInput\n            mode=\"outlined\"\n            label=\"Recipient Address\"\n            value={recipient}\n            onChangeText={setRecipient}\n            style={styles.input}\n            autoCapitalize=\"none\"\n          />\n\n          <TextInput\n            mode=\"outlined\"\n            label=\"Amount\"\n            value={amount}\n            onChangeText={setAmount}\n            keyboardType=\"decimal-pad\"\n            style={styles.input}\n            right={<TextInput.Affix text={selectedToken.symbol} />}\n          />\n\n          {error ? <Text style={styles.error}>{error}</Text> : null}\n\n          <Button\n            mode=\"contained\"\n            onPress={handleSend}\n            loading={loading}\n            disabled={!recipient || !amount || loading}\n            style={styles.button}\n          >\n            Send {selectedToken.symbol}\n          </Button>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.background,\n  },\n  content: {\n    flex: 1,\n  },\n  balanceCard: {\n    margin: SIZES.md,\n  },\n  balanceLabel: {\n    fontSize: 14,\n    color: COLORS.textSecondary,\n    marginBottom: SIZES.xs,\n  },\n  balanceValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: COLORS.text,\n  },\n  form: {\n    padding: SIZES.md,\n  },\n  input: {\n    marginBottom: SIZES.md,\n  },\n  button: {\n    marginTop: SIZES.md,\n  },\n  error: {\n    color: COLORS.error,\n    marginBottom: SIZES.md,\n  },\n});\n\nexport default SendScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}